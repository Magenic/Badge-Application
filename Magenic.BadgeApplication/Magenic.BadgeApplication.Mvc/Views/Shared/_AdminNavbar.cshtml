@using Magenic.BadgeApplication.BusinessLogic.PointsReport
@using Magenic.BadgeApplication.BusinessLogic.Badge
@using Magenic.BadgeApplication.BusinessLogic.Activity
@using Magenic.BadgeApplication.Extensions
@using Magenic.BadgeApplication.Resources
@using Magenic.BadgeApplication.Common.Enums
@using Csla.Web.Mvc
@using Csla.Rules
@using Csla

@{
    // Need to do this to fire off AddBusinessRules so HasPermission works.
    var fakeBadgeItem = new ApproveBadgeItem();
    var fakeActivityItem = new ApproveActivityItem();
}

    <ul class="nav nav-pills">
        <li>
            @Html.ActionLink(ApplicationResources.AddEditBadges, Mvc.BadgeManager.Index())
        </li>

        <li>
            @Html.ActionLink(ApplicationResources.ManageActivitiesLink, Mvc.BadgeManager.ManageActivities())
        </li>

        @Html.HasPermission(AuthorizationActions.GetObject, typeof(ApproveBadgeItem), Html.GenerateConditionalNavigation(ApplicationResources.CommunityBadgesForApproval, Mvc.BadgeManager.ApproveCommunityBadges().Result), String.Empty)

        @Html.HasPermission(AuthorizationActions.GetObject, typeof(PointsReportCollection), Html.GenerateConditionalNavigation(ApplicationResources.PointsReport, Mvc.PointsReport.Index().Result), String.Empty)

        @Html.HasPermission(AuthorizationActions.GetObject, typeof(ApproveActivityItemForManager), Html.GenerateConditionalNavigation(ApplicationResources.ActivitiesForApproval, Mvc.BadgeManager.ApproveActivities(true).Result), String.Empty)

        <li>
            @Html.ActionLink(ApplicationResources.InactiveBadges, "InactiveBadges", "BadgeManager")
        </li>

        <li>
            @Html.ActionLink(ApplicationResources.EarnedBadgesHeader2, "EarnedBadges", "BadgeManager")
        </li>
    </ul>